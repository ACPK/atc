// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/concourse/atc/builds"
	"github.com/concourse/atc/config"
	"github.com/concourse/atc/scheduler"
	tbuilds "github.com/concourse/turbine/api/builds"
)

type FakeBuildFactory struct {
	CreateStub        func(config.Job, builds.VersionedResources) (tbuilds.Build, error)
	createMutex       sync.RWMutex
	createArgsForCall []struct {
		arg1 config.Job
		arg2 builds.VersionedResources
	}
	createReturns struct {
		result1 tbuilds.Build
		result2 error
	}
}

func (fake *FakeBuildFactory) Create(arg1 config.Job, arg2 builds.VersionedResources) (tbuilds.Build, error) {
	fake.createMutex.Lock()
	fake.createArgsForCall = append(fake.createArgsForCall, struct {
		arg1 config.Job
		arg2 builds.VersionedResources
	}{arg1, arg2})
	fake.createMutex.Unlock()
	if fake.CreateStub != nil {
		return fake.CreateStub(arg1, arg2)
	} else {
		return fake.createReturns.result1, fake.createReturns.result2
	}
}

func (fake *FakeBuildFactory) CreateCallCount() int {
	fake.createMutex.RLock()
	defer fake.createMutex.RUnlock()
	return len(fake.createArgsForCall)
}

func (fake *FakeBuildFactory) CreateArgsForCall(i int) (config.Job, builds.VersionedResources) {
	fake.createMutex.RLock()
	defer fake.createMutex.RUnlock()
	return fake.createArgsForCall[i].arg1, fake.createArgsForCall[i].arg2
}

func (fake *FakeBuildFactory) CreateReturns(result1 tbuilds.Build, result2 error) {
	fake.CreateStub = nil
	fake.createReturns = struct {
		result1 tbuilds.Build
		result2 error
	}{result1, result2}
}

var _ scheduler.BuildFactory = new(FakeBuildFactory)
