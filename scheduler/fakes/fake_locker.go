// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/concourse/atc/db"
	"github.com/concourse/atc/scheduler"
)

type FakeLocker struct {
	AcquireBuildSchedulingLockStub        func() (db.Lock, error)
	acquireBuildSchedulingLockMutex       sync.RWMutex
	acquireBuildSchedulingLockArgsForCall []struct{}
	acquireBuildSchedulingLockReturns struct {
		result1 db.Lock
		result2 error
	}
}

func (fake *FakeLocker) AcquireBuildSchedulingLock() (db.Lock, error) {
	fake.acquireBuildSchedulingLockMutex.Lock()
	fake.acquireBuildSchedulingLockArgsForCall = append(fake.acquireBuildSchedulingLockArgsForCall, struct{}{})
	fake.acquireBuildSchedulingLockMutex.Unlock()
	if fake.AcquireBuildSchedulingLockStub != nil {
		return fake.AcquireBuildSchedulingLockStub()
	} else {
		return fake.acquireBuildSchedulingLockReturns.result1, fake.acquireBuildSchedulingLockReturns.result2
	}
}

func (fake *FakeLocker) AcquireBuildSchedulingLockCallCount() int {
	fake.acquireBuildSchedulingLockMutex.RLock()
	defer fake.acquireBuildSchedulingLockMutex.RUnlock()
	return len(fake.acquireBuildSchedulingLockArgsForCall)
}

func (fake *FakeLocker) AcquireBuildSchedulingLockReturns(result1 db.Lock, result2 error) {
	fake.AcquireBuildSchedulingLockStub = nil
	fake.acquireBuildSchedulingLockReturns = struct {
		result1 db.Lock
		result2 error
	}{result1, result2}
}

var _ scheduler.Locker = new(FakeLocker)
