// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/concourse/atc/db"
	"github.com/concourse/atc/scheduler"
	"github.com/pivotal-golang/lager"
)

type FakeEngine struct {
	ResumeBuildStub        func(db.Build, lager.Logger) error
	resumeBuildMutex       sync.RWMutex
	resumeBuildArgsForCall []struct {
		arg1 db.Build
		arg2 lager.Logger
	}
	resumeBuildReturns struct {
		result1 error
	}
}

func (fake *FakeEngine) ResumeBuild(arg1 db.Build, arg2 lager.Logger) error {
	fake.resumeBuildMutex.Lock()
	fake.resumeBuildArgsForCall = append(fake.resumeBuildArgsForCall, struct {
		arg1 db.Build
		arg2 lager.Logger
	}{arg1, arg2})
	fake.resumeBuildMutex.Unlock()
	if fake.ResumeBuildStub != nil {
		return fake.ResumeBuildStub(arg1, arg2)
	} else {
		return fake.resumeBuildReturns.result1
	}
}

func (fake *FakeEngine) ResumeBuildCallCount() int {
	fake.resumeBuildMutex.RLock()
	defer fake.resumeBuildMutex.RUnlock()
	return len(fake.resumeBuildArgsForCall)
}

func (fake *FakeEngine) ResumeBuildArgsForCall(i int) (db.Build, lager.Logger) {
	fake.resumeBuildMutex.RLock()
	defer fake.resumeBuildMutex.RUnlock()
	return fake.resumeBuildArgsForCall[i].arg1, fake.resumeBuildArgsForCall[i].arg2
}

func (fake *FakeEngine) ResumeBuildReturns(result1 error) {
	fake.ResumeBuildStub = nil
	fake.resumeBuildReturns = struct {
		result1 error
	}{result1}
}

var _ scheduler.Engine = new(FakeEngine)
