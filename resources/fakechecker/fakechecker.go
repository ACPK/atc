// This file was generated by counterfeiter
package fakechecker

import (
	"sync"

	"github.com/winston-ci/winston/builds"
	"github.com/winston-ci/winston/config"
)

type FakeChecker struct {
	CheckResourceStub        func(config.Resource, builds.Version) []builds.Version
	checkResourceMutex       sync.RWMutex
	checkResourceArgsForCall []struct {
		arg1 config.Resource
		arg2 builds.Version
	}
	checkResourceReturns struct {
		result1 []builds.Version
	}
}

func (fake *FakeChecker) CheckResource(arg1 config.Resource, arg2 builds.Version) []builds.Version {
	fake.checkResourceMutex.Lock()
	defer fake.checkResourceMutex.Unlock()
	fake.checkResourceArgsForCall = append(fake.checkResourceArgsForCall, struct {
		arg1 config.Resource
		arg2 builds.Version
	}{arg1, arg2})
	if fake.CheckResourceStub != nil {
		return fake.CheckResourceStub(arg1, arg2)
	} else {
		return fake.checkResourceReturns.result1
	}
}

func (fake *FakeChecker) CheckResourceCallCount() int {
	fake.checkResourceMutex.RLock()
	defer fake.checkResourceMutex.RUnlock()
	return len(fake.checkResourceArgsForCall)
}

func (fake *FakeChecker) CheckResourceArgsForCall(i int) (config.Resource, builds.Version) {
	fake.checkResourceMutex.RLock()
	defer fake.checkResourceMutex.RUnlock()
	return fake.checkResourceArgsForCall[i].arg1, fake.checkResourceArgsForCall[i].arg2
}

func (fake *FakeChecker) CheckResourceReturns(result1 []builds.Version) {
	fake.checkResourceReturns = struct {
		result1 []builds.Version
	}{result1}
}
