// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/concourse/atc/db"
	"github.com/concourse/atc/resource"
)

type FakeTrackerDB struct {
	InsertVolumeDataStub        func(data db.VolumeData) error
	insertVolumeDataMutex       sync.RWMutex
	insertVolumeDataArgsForCall []struct {
		data db.VolumeData
	}
	insertVolumeDataReturns struct {
		result1 error
	}
}

func (fake *FakeTrackerDB) InsertVolumeData(data db.VolumeData) error {
	fake.insertVolumeDataMutex.Lock()
	fake.insertVolumeDataArgsForCall = append(fake.insertVolumeDataArgsForCall, struct {
		data db.VolumeData
	}{data})
	fake.insertVolumeDataMutex.Unlock()
	if fake.InsertVolumeDataStub != nil {
		return fake.InsertVolumeDataStub(data)
	} else {
		return fake.insertVolumeDataReturns.result1
	}
}

func (fake *FakeTrackerDB) InsertVolumeDataCallCount() int {
	fake.insertVolumeDataMutex.RLock()
	defer fake.insertVolumeDataMutex.RUnlock()
	return len(fake.insertVolumeDataArgsForCall)
}

func (fake *FakeTrackerDB) InsertVolumeDataArgsForCall(i int) db.VolumeData {
	fake.insertVolumeDataMutex.RLock()
	defer fake.insertVolumeDataMutex.RUnlock()
	return fake.insertVolumeDataArgsForCall[i].data
}

func (fake *FakeTrackerDB) InsertVolumeDataReturns(result1 error) {
	fake.InsertVolumeDataStub = nil
	fake.insertVolumeDataReturns = struct {
		result1 error
	}{result1}
}

var _ resource.TrackerDB = new(FakeTrackerDB)
