// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/concourse/atc/exec"
	"github.com/concourse/atc/resource"
	"github.com/concourse/atc/worker"
)

type FakeTrackerFactory struct {
	TrackerForStub        func(worker.Client) resource.Tracker
	trackerForMutex       sync.RWMutex
	trackerForArgsForCall []struct {
		arg1 worker.Client
	}
	trackerForReturns struct {
		result1 resource.Tracker
	}
}

func (fake *FakeTrackerFactory) TrackerFor(arg1 worker.Client) resource.Tracker {
	fake.trackerForMutex.Lock()
	fake.trackerForArgsForCall = append(fake.trackerForArgsForCall, struct {
		arg1 worker.Client
	}{arg1})
	fake.trackerForMutex.Unlock()
	if fake.TrackerForStub != nil {
		return fake.TrackerForStub(arg1)
	} else {
		return fake.trackerForReturns.result1
	}
}

func (fake *FakeTrackerFactory) TrackerForCallCount() int {
	fake.trackerForMutex.RLock()
	defer fake.trackerForMutex.RUnlock()
	return len(fake.trackerForArgsForCall)
}

func (fake *FakeTrackerFactory) TrackerForArgsForCall(i int) worker.Client {
	fake.trackerForMutex.RLock()
	defer fake.trackerForMutex.RUnlock()
	return fake.trackerForArgsForCall[i].arg1
}

func (fake *FakeTrackerFactory) TrackerForReturns(result1 resource.Tracker) {
	fake.TrackerForStub = nil
	fake.trackerForReturns = struct {
		result1 resource.Tracker
	}{result1}
}

var _ exec.TrackerFactory = new(FakeTrackerFactory)
