// This file was generated by counterfeiter
package fakebuilder

import (
	"sync"

	"github.com/concourse/atc/builder"
	"github.com/concourse/atc/db"
	"github.com/concourse/atc/engine"
)

type FakeBuilder struct {
	BuildStub        func(db.Build, engine.BuildPlan) error
	buildMutex       sync.RWMutex
	buildArgsForCall []struct {
		arg1 db.Build
		arg2 engine.BuildPlan
	}
	buildReturns struct {
		result1 error
	}
}

func (fake *FakeBuilder) Build(arg1 db.Build, arg2 engine.BuildPlan) error {
	fake.buildMutex.Lock()
	fake.buildArgsForCall = append(fake.buildArgsForCall, struct {
		arg1 db.Build
		arg2 engine.BuildPlan
	}{arg1, arg2})
	fake.buildMutex.Unlock()
	if fake.BuildStub != nil {
		return fake.BuildStub(arg1, arg2)
	} else {
		return fake.buildReturns.result1
	}
}

func (fake *FakeBuilder) BuildCallCount() int {
	fake.buildMutex.RLock()
	defer fake.buildMutex.RUnlock()
	return len(fake.buildArgsForCall)
}

func (fake *FakeBuilder) BuildArgsForCall(i int) (db.Build, engine.BuildPlan) {
	fake.buildMutex.RLock()
	defer fake.buildMutex.RUnlock()
	return fake.buildArgsForCall[i].arg1, fake.buildArgsForCall[i].arg2
}

func (fake *FakeBuilder) BuildReturns(result1 error) {
	fake.BuildStub = nil
	fake.buildReturns = struct {
		result1 error
	}{result1}
}

var _ builder.Builder = new(FakeBuilder)
