// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/concourse/atc/api/jobserver"
	"github.com/concourse/atc/db"
	"github.com/concourse/atc/scheduler"
)

type FakeSchedulerFactory struct {
	BuildSchedulerStub        func(db.PipelineDB) scheduler.BuildScheduler
	buildSchedulerMutex       sync.RWMutex
	buildSchedulerArgsForCall []struct {
		arg1 db.PipelineDB
	}
	buildSchedulerReturns struct {
		result1 scheduler.BuildScheduler
	}
}

func (fake *FakeSchedulerFactory) BuildScheduler(arg1 db.PipelineDB) scheduler.BuildScheduler {
	fake.buildSchedulerMutex.Lock()
	fake.buildSchedulerArgsForCall = append(fake.buildSchedulerArgsForCall, struct {
		arg1 db.PipelineDB
	}{arg1})
	fake.buildSchedulerMutex.Unlock()
	if fake.BuildSchedulerStub != nil {
		return fake.BuildSchedulerStub(arg1)
	} else {
		return fake.buildSchedulerReturns.result1
	}
}

func (fake *FakeSchedulerFactory) BuildSchedulerCallCount() int {
	fake.buildSchedulerMutex.RLock()
	defer fake.buildSchedulerMutex.RUnlock()
	return len(fake.buildSchedulerArgsForCall)
}

func (fake *FakeSchedulerFactory) BuildSchedulerArgsForCall(i int) db.PipelineDB {
	fake.buildSchedulerMutex.RLock()
	defer fake.buildSchedulerMutex.RUnlock()
	return fake.buildSchedulerArgsForCall[i].arg1
}

func (fake *FakeSchedulerFactory) BuildSchedulerReturns(result1 scheduler.BuildScheduler) {
	fake.BuildSchedulerStub = nil
	fake.buildSchedulerReturns = struct {
		result1 scheduler.BuildScheduler
	}{result1}
}

var _ jobserver.SchedulerFactory = new(FakeSchedulerFactory)
